{"ast":null,"code":"import { map } from '../operators/map';\nimport { Observable } from '../Observable';\nimport { AjaxResponse } from './AjaxResponse';\nimport { AjaxTimeoutError, AjaxError } from './errors';\n\nfunction ajaxGet(url, headers) {\n  return ajax({\n    method: 'GET',\n    url,\n    headers\n  });\n}\n\nfunction ajaxPost(url, body, headers) {\n  return ajax({\n    method: 'POST',\n    url,\n    body,\n    headers\n  });\n}\n\nfunction ajaxDelete(url, headers) {\n  return ajax({\n    method: 'DELETE',\n    url,\n    headers\n  });\n}\n\nfunction ajaxPut(url, body, headers) {\n  return ajax({\n    method: 'PUT',\n    url,\n    body,\n    headers\n  });\n}\n\nfunction ajaxPatch(url, body, headers) {\n  return ajax({\n    method: 'PATCH',\n    url,\n    body,\n    headers\n  });\n}\n\nconst mapResponse = map(x => x.response);\n\nfunction ajaxGetJSON(url, headers) {\n  return mapResponse(ajax({\n    method: 'GET',\n    url,\n    headers\n  }));\n}\n\nexport const ajax = (() => {\n  const create = urlOrConfig => {\n    const config = typeof urlOrConfig === 'string' ? {\n      url: urlOrConfig\n    } : urlOrConfig;\n    return fromAjax(config);\n  };\n\n  create.get = ajaxGet;\n  create.post = ajaxPost;\n  create.delete = ajaxDelete;\n  create.put = ajaxPut;\n  create.patch = ajaxPatch;\n  create.getJSON = ajaxGetJSON;\n  return create;\n})();\nconst UPLOAD = 'upload';\nconst DOWNLOAD = 'download';\nconst LOADSTART = 'loadstart';\nconst PROGRESS = 'progress';\nconst LOAD = 'load';\nexport function fromAjax(init) {\n  return new Observable(destination => {\n    var _a, _b;\n\n    const config = Object.assign({\n      async: true,\n      crossDomain: false,\n      withCredentials: false,\n      method: 'GET',\n      timeout: 0,\n      responseType: 'json'\n    }, init);\n    const {\n      queryParams,\n      body: configuredBody,\n      headers: configuredHeaders\n    } = config;\n    let url = config.url;\n\n    if (!url) {\n      throw new TypeError('url is required');\n    }\n\n    if (queryParams) {\n      let searchParams;\n\n      if (url.includes('?')) {\n        const parts = url.split('?');\n\n        if (2 < parts.length) {\n          throw new TypeError('invalid url');\n        }\n\n        searchParams = new URLSearchParams(parts[1]);\n        new URLSearchParams(queryParams).forEach((value, key) => searchParams.set(key, value));\n        url = parts[0] + '?' + searchParams;\n      } else {\n        searchParams = new URLSearchParams(queryParams);\n        url = url + '?' + searchParams;\n      }\n    }\n\n    const headers = {};\n\n    if (configuredHeaders) {\n      for (const key in configuredHeaders) {\n        if (configuredHeaders.hasOwnProperty(key)) {\n          headers[key.toLowerCase()] = configuredHeaders[key];\n        }\n      }\n    }\n\n    const crossDomain = config.crossDomain;\n\n    if (!crossDomain && !('x-requested-with' in headers)) {\n      headers['x-requested-with'] = 'XMLHttpRequest';\n    }\n\n    const {\n      withCredentials,\n      xsrfCookieName,\n      xsrfHeaderName\n    } = config;\n\n    if ((withCredentials || !crossDomain) && xsrfCookieName && xsrfHeaderName) {\n      const xsrfCookie = (_b = (_a = document === null || document === void 0 ? void 0 : document.cookie.match(new RegExp(`(^|;\\\\s*)(${xsrfCookieName})=([^;]*)`))) === null || _a === void 0 ? void 0 : _a.pop()) !== null && _b !== void 0 ? _b : '';\n\n      if (xsrfCookie) {\n        headers[xsrfHeaderName] = xsrfCookie;\n      }\n    }\n\n    const body = extractContentTypeAndMaybeSerializeBody(configuredBody, headers);\n\n    const _request = Object.assign(Object.assign({}, config), {\n      url,\n      headers,\n      body\n    });\n\n    let xhr;\n    xhr = init.createXHR ? init.createXHR() : new XMLHttpRequest();\n    {\n      const {\n        progressSubscriber,\n        includeDownloadProgress = false,\n        includeUploadProgress = false\n      } = init;\n\n      const addErrorEvent = (type, errorFactory) => {\n        xhr.addEventListener(type, () => {\n          var _a;\n\n          const error = errorFactory();\n          (_a = progressSubscriber === null || progressSubscriber === void 0 ? void 0 : progressSubscriber.error) === null || _a === void 0 ? void 0 : _a.call(progressSubscriber, error);\n          destination.error(error);\n        });\n      };\n\n      addErrorEvent('timeout', () => new AjaxTimeoutError(xhr, _request));\n      addErrorEvent('abort', () => new AjaxError('aborted', xhr, _request));\n\n      const createResponse = (direction, event) => new AjaxResponse(event, xhr, _request, `${direction}_${event.type}`);\n\n      const addProgressEvent = (target, type, direction) => {\n        target.addEventListener(type, event => {\n          destination.next(createResponse(direction, event));\n        });\n      };\n\n      if (includeUploadProgress) {\n        [LOADSTART, PROGRESS, LOAD].forEach(type => addProgressEvent(xhr.upload, type, UPLOAD));\n      }\n\n      if (progressSubscriber) {\n        [LOADSTART, PROGRESS].forEach(type => xhr.upload.addEventListener(type, e => {\n          var _a;\n\n          return (_a = progressSubscriber === null || progressSubscriber === void 0 ? void 0 : progressSubscriber.next) === null || _a === void 0 ? void 0 : _a.call(progressSubscriber, e);\n        }));\n      }\n\n      if (includeDownloadProgress) {\n        [LOADSTART, PROGRESS].forEach(type => addProgressEvent(xhr, type, DOWNLOAD));\n      }\n\n      const emitError = status => {\n        const msg = 'ajax error' + (status ? ' ' + status : '');\n        destination.error(new AjaxError(msg, xhr, _request));\n      };\n\n      xhr.addEventListener('error', e => {\n        var _a;\n\n        (_a = progressSubscriber === null || progressSubscriber === void 0 ? void 0 : progressSubscriber.error) === null || _a === void 0 ? void 0 : _a.call(progressSubscriber, e);\n        emitError();\n      });\n      xhr.addEventListener(LOAD, event => {\n        var _a, _b;\n\n        const {\n          status\n        } = xhr;\n\n        if (status < 400) {\n          (_a = progressSubscriber === null || progressSubscriber === void 0 ? void 0 : progressSubscriber.complete) === null || _a === void 0 ? void 0 : _a.call(progressSubscriber);\n          let response;\n\n          try {\n            response = createResponse(DOWNLOAD, event);\n          } catch (err) {\n            destination.error(err);\n            return;\n          }\n\n          destination.next(response);\n          destination.complete();\n        } else {\n          (_b = progressSubscriber === null || progressSubscriber === void 0 ? void 0 : progressSubscriber.error) === null || _b === void 0 ? void 0 : _b.call(progressSubscriber, event);\n          emitError(status);\n        }\n      });\n    }\n    const {\n      user,\n      method,\n      async\n    } = _request;\n\n    if (user) {\n      xhr.open(method, url, async, user, _request.password);\n    } else {\n      xhr.open(method, url, async);\n    }\n\n    if (async) {\n      xhr.timeout = _request.timeout;\n      xhr.responseType = _request.responseType;\n    }\n\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = _request.withCredentials;\n    }\n\n    for (const key in headers) {\n      if (headers.hasOwnProperty(key)) {\n        xhr.setRequestHeader(key, headers[key]);\n      }\n    }\n\n    if (body) {\n      xhr.send(body);\n    } else {\n      xhr.send();\n    }\n\n    return () => {\n      if (xhr && xhr.readyState !== 4) {\n        xhr.abort();\n      }\n    };\n  });\n}\n\nfunction extractContentTypeAndMaybeSerializeBody(body, headers) {\n  var _a;\n\n  if (!body || typeof body === 'string' || isFormData(body) || isURLSearchParams(body) || isArrayBuffer(body) || isFile(body) || isBlob(body) || isReadableStream(body)) {\n    return body;\n  }\n\n  if (isArrayBufferView(body)) {\n    return body.buffer;\n  }\n\n  if (typeof body === 'object') {\n    headers['content-type'] = (_a = headers['content-type']) !== null && _a !== void 0 ? _a : 'application/json;charset=utf-8';\n    return JSON.stringify(body);\n  }\n\n  throw new TypeError('Unknown body type');\n}\n\nconst _toString = Object.prototype.toString;\n\nfunction toStringCheck(obj, name) {\n  return _toString.call(obj) === `[object ${name}]`;\n}\n\nfunction isArrayBuffer(body) {\n  return toStringCheck(body, 'ArrayBuffer');\n}\n\nfunction isFile(body) {\n  return toStringCheck(body, 'File');\n}\n\nfunction isBlob(body) {\n  return toStringCheck(body, 'Blob');\n}\n\nfunction isArrayBufferView(body) {\n  return typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView(body);\n}\n\nfunction isFormData(body) {\n  return typeof FormData !== 'undefined' && body instanceof FormData;\n}\n\nfunction isURLSearchParams(body) {\n  return typeof URLSearchParams !== 'undefined' && body instanceof URLSearchParams;\n}\n\nfunction isReadableStream(body) {\n  return typeof ReadableStream !== 'undefined' && body instanceof ReadableStream;\n}","map":{"version":3,"sources":["D:/DADOS/√Årea de Trabalho/CRUD em angular/Crud/node_modules/rxjs/dist/esm/internal/ajax/ajax.js"],"names":["map","Observable","AjaxResponse","AjaxTimeoutError","AjaxError","ajaxGet","url","headers","ajax","method","ajaxPost","body","ajaxDelete","ajaxPut","ajaxPatch","mapResponse","x","response","ajaxGetJSON","create","urlOrConfig","config","fromAjax","get","post","delete","put","patch","getJSON","UPLOAD","DOWNLOAD","LOADSTART","PROGRESS","LOAD","init","destination","_a","_b","Object","assign","async","crossDomain","withCredentials","timeout","responseType","queryParams","configuredBody","configuredHeaders","TypeError","searchParams","includes","parts","split","length","URLSearchParams","forEach","value","key","set","hasOwnProperty","toLowerCase","xsrfCookieName","xsrfHeaderName","xsrfCookie","document","cookie","match","RegExp","pop","extractContentTypeAndMaybeSerializeBody","_request","xhr","createXHR","XMLHttpRequest","progressSubscriber","includeDownloadProgress","includeUploadProgress","addErrorEvent","type","errorFactory","addEventListener","error","call","createResponse","direction","event","addProgressEvent","target","next","upload","e","emitError","status","msg","complete","err","user","open","password","setRequestHeader","send","readyState","abort","isFormData","isURLSearchParams","isArrayBuffer","isFile","isBlob","isReadableStream","isArrayBufferView","buffer","JSON","stringify","_toString","prototype","toString","toStringCheck","obj","name","ArrayBuffer","isView","FormData","ReadableStream"],"mappings":"AAAA,SAASA,GAAT,QAAoB,kBAApB;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,gBAAT,EAA2BC,SAA3B,QAA4C,UAA5C;;AACA,SAASC,OAAT,CAAiBC,GAAjB,EAAsBC,OAAtB,EAA+B;AAC3B,SAAOC,IAAI,CAAC;AAAEC,IAAAA,MAAM,EAAE,KAAV;AAAiBH,IAAAA,GAAjB;AAAsBC,IAAAA;AAAtB,GAAD,CAAX;AACH;;AACD,SAASG,QAAT,CAAkBJ,GAAlB,EAAuBK,IAAvB,EAA6BJ,OAA7B,EAAsC;AAClC,SAAOC,IAAI,CAAC;AAAEC,IAAAA,MAAM,EAAE,MAAV;AAAkBH,IAAAA,GAAlB;AAAuBK,IAAAA,IAAvB;AAA6BJ,IAAAA;AAA7B,GAAD,CAAX;AACH;;AACD,SAASK,UAAT,CAAoBN,GAApB,EAAyBC,OAAzB,EAAkC;AAC9B,SAAOC,IAAI,CAAC;AAAEC,IAAAA,MAAM,EAAE,QAAV;AAAoBH,IAAAA,GAApB;AAAyBC,IAAAA;AAAzB,GAAD,CAAX;AACH;;AACD,SAASM,OAAT,CAAiBP,GAAjB,EAAsBK,IAAtB,EAA4BJ,OAA5B,EAAqC;AACjC,SAAOC,IAAI,CAAC;AAAEC,IAAAA,MAAM,EAAE,KAAV;AAAiBH,IAAAA,GAAjB;AAAsBK,IAAAA,IAAtB;AAA4BJ,IAAAA;AAA5B,GAAD,CAAX;AACH;;AACD,SAASO,SAAT,CAAmBR,GAAnB,EAAwBK,IAAxB,EAA8BJ,OAA9B,EAAuC;AACnC,SAAOC,IAAI,CAAC;AAAEC,IAAAA,MAAM,EAAE,OAAV;AAAmBH,IAAAA,GAAnB;AAAwBK,IAAAA,IAAxB;AAA8BJ,IAAAA;AAA9B,GAAD,CAAX;AACH;;AACD,MAAMQ,WAAW,GAAGf,GAAG,CAAEgB,CAAD,IAAOA,CAAC,CAACC,QAAV,CAAvB;;AACA,SAASC,WAAT,CAAqBZ,GAArB,EAA0BC,OAA1B,EAAmC;AAC/B,SAAOQ,WAAW,CAACP,IAAI,CAAC;AACpBC,IAAAA,MAAM,EAAE,KADY;AAEpBH,IAAAA,GAFoB;AAGpBC,IAAAA;AAHoB,GAAD,CAAL,CAAlB;AAKH;;AACD,OAAO,MAAMC,IAAI,GAAG,CAAC,MAAM;AACvB,QAAMW,MAAM,GAAIC,WAAD,IAAiB;AAC5B,UAAMC,MAAM,GAAG,OAAOD,WAAP,KAAuB,QAAvB,GACT;AACEd,MAAAA,GAAG,EAAEc;AADP,KADS,GAITA,WAJN;AAKA,WAAOE,QAAQ,CAACD,MAAD,CAAf;AACH,GAPD;;AAQAF,EAAAA,MAAM,CAACI,GAAP,GAAalB,OAAb;AACAc,EAAAA,MAAM,CAACK,IAAP,GAAcd,QAAd;AACAS,EAAAA,MAAM,CAACM,MAAP,GAAgBb,UAAhB;AACAO,EAAAA,MAAM,CAACO,GAAP,GAAab,OAAb;AACAM,EAAAA,MAAM,CAACQ,KAAP,GAAeb,SAAf;AACAK,EAAAA,MAAM,CAACS,OAAP,GAAiBV,WAAjB;AACA,SAAOC,MAAP;AACH,CAhBmB,GAAb;AAiBP,MAAMU,MAAM,GAAG,QAAf;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,IAAI,GAAG,MAAb;AACA,OAAO,SAASX,QAAT,CAAkBY,IAAlB,EAAwB;AAC3B,SAAO,IAAIjC,UAAJ,CAAgBkC,WAAD,IAAiB;AACnC,QAAIC,EAAJ,EAAQC,EAAR;;AACA,UAAMhB,MAAM,GAAGiB,MAAM,CAACC,MAAP,CAAc;AAAEC,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,WAAW,EAAE,KAA5B;AAAmCC,MAAAA,eAAe,EAAE,KAApD;AAA2DjC,MAAAA,MAAM,EAAE,KAAnE;AAA0EkC,MAAAA,OAAO,EAAE,CAAnF;AAAsFC,MAAAA,YAAY,EAAE;AAApG,KAAd,EAA4HV,IAA5H,CAAf;AACA,UAAM;AAAEW,MAAAA,WAAF;AAAelC,MAAAA,IAAI,EAAEmC,cAArB;AAAqCvC,MAAAA,OAAO,EAAEwC;AAA9C,QAAoE1B,MAA1E;AACA,QAAIf,GAAG,GAAGe,MAAM,CAACf,GAAjB;;AACA,QAAI,CAACA,GAAL,EAAU;AACN,YAAM,IAAI0C,SAAJ,CAAc,iBAAd,CAAN;AACH;;AACD,QAAIH,WAAJ,EAAiB;AACb,UAAII,YAAJ;;AACA,UAAI3C,GAAG,CAAC4C,QAAJ,CAAa,GAAb,CAAJ,EAAuB;AACnB,cAAMC,KAAK,GAAG7C,GAAG,CAAC8C,KAAJ,CAAU,GAAV,CAAd;;AACA,YAAI,IAAID,KAAK,CAACE,MAAd,EAAsB;AAClB,gBAAM,IAAIL,SAAJ,CAAc,aAAd,CAAN;AACH;;AACDC,QAAAA,YAAY,GAAG,IAAIK,eAAJ,CAAoBH,KAAK,CAAC,CAAD,CAAzB,CAAf;AACA,YAAIG,eAAJ,CAAoBT,WAApB,EAAiCU,OAAjC,CAAyC,CAACC,KAAD,EAAQC,GAAR,KAAgBR,YAAY,CAACS,GAAb,CAAiBD,GAAjB,EAAsBD,KAAtB,CAAzD;AACAlD,QAAAA,GAAG,GAAG6C,KAAK,CAAC,CAAD,CAAL,GAAW,GAAX,GAAiBF,YAAvB;AACH,OARD,MASK;AACDA,QAAAA,YAAY,GAAG,IAAIK,eAAJ,CAAoBT,WAApB,CAAf;AACAvC,QAAAA,GAAG,GAAGA,GAAG,GAAG,GAAN,GAAY2C,YAAlB;AACH;AACJ;;AACD,UAAM1C,OAAO,GAAG,EAAhB;;AACA,QAAIwC,iBAAJ,EAAuB;AACnB,WAAK,MAAMU,GAAX,IAAkBV,iBAAlB,EAAqC;AACjC,YAAIA,iBAAiB,CAACY,cAAlB,CAAiCF,GAAjC,CAAJ,EAA2C;AACvClD,UAAAA,OAAO,CAACkD,GAAG,CAACG,WAAJ,EAAD,CAAP,GAA6Bb,iBAAiB,CAACU,GAAD,CAA9C;AACH;AACJ;AACJ;;AACD,UAAMhB,WAAW,GAAGpB,MAAM,CAACoB,WAA3B;;AACA,QAAI,CAACA,WAAD,IAAgB,EAAE,sBAAsBlC,OAAxB,CAApB,EAAsD;AAClDA,MAAAA,OAAO,CAAC,kBAAD,CAAP,GAA8B,gBAA9B;AACH;;AACD,UAAM;AAAEmC,MAAAA,eAAF;AAAmBmB,MAAAA,cAAnB;AAAmCC,MAAAA;AAAnC,QAAsDzC,MAA5D;;AACA,QAAI,CAACqB,eAAe,IAAI,CAACD,WAArB,KAAqCoB,cAArC,IAAuDC,cAA3D,EAA2E;AACvE,YAAMC,UAAU,GAAG,CAAC1B,EAAE,GAAG,CAACD,EAAE,GAAG4B,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACC,MAAT,CAAgBC,KAAhB,CAAsB,IAAIC,MAAJ,CAAY,aAAYN,cAAe,WAAvC,CAAtB,CAA1D,MAAyI,IAAzI,IAAiJzB,EAAE,KAAK,KAAK,CAA7J,GAAiK,KAAK,CAAtK,GAA0KA,EAAE,CAACgC,GAAH,EAAhL,MAA8L,IAA9L,IAAsM/B,EAAE,KAAK,KAAK,CAAlN,GAAsNA,EAAtN,GAA2N,EAA9O;;AACA,UAAI0B,UAAJ,EAAgB;AACZxD,QAAAA,OAAO,CAACuD,cAAD,CAAP,GAA0BC,UAA1B;AACH;AACJ;;AACD,UAAMpD,IAAI,GAAG0D,uCAAuC,CAACvB,cAAD,EAAiBvC,OAAjB,CAApD;;AACA,UAAM+D,QAAQ,GAAGhC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBlB,MAAlB,CAAd,EAAyC;AAAEf,MAAAA,GAAF;AACtDC,MAAAA,OADsD;AAEtDI,MAAAA;AAFsD,KAAzC,CAAjB;;AAGA,QAAI4D,GAAJ;AACAA,IAAAA,GAAG,GAAGrC,IAAI,CAACsC,SAAL,GAAiBtC,IAAI,CAACsC,SAAL,EAAjB,GAAoC,IAAIC,cAAJ,EAA1C;AACA;AACI,YAAM;AAAEC,QAAAA,kBAAF;AAAsBC,QAAAA,uBAAuB,GAAG,KAAhD;AAAuDC,QAAAA,qBAAqB,GAAG;AAA/E,UAAyF1C,IAA/F;;AACA,YAAM2C,aAAa,GAAG,CAACC,IAAD,EAAOC,YAAP,KAAwB;AAC1CR,QAAAA,GAAG,CAACS,gBAAJ,CAAqBF,IAArB,EAA2B,MAAM;AAC7B,cAAI1C,EAAJ;;AACA,gBAAM6C,KAAK,GAAGF,YAAY,EAA1B;AACA,WAAC3C,EAAE,GAAGsC,kBAAkB,KAAK,IAAvB,IAA+BA,kBAAkB,KAAK,KAAK,CAA3D,GAA+D,KAAK,CAApE,GAAwEA,kBAAkB,CAACO,KAAjG,MAA4G,IAA5G,IAAoH7C,EAAE,KAAK,KAAK,CAAhI,GAAoI,KAAK,CAAzI,GAA6IA,EAAE,CAAC8C,IAAH,CAAQR,kBAAR,EAA4BO,KAA5B,CAA7I;AACA9C,UAAAA,WAAW,CAAC8C,KAAZ,CAAkBA,KAAlB;AACH,SALD;AAMH,OAPD;;AAQAJ,MAAAA,aAAa,CAAC,SAAD,EAAY,MAAM,IAAI1E,gBAAJ,CAAqBoE,GAArB,EAA0BD,QAA1B,CAAlB,CAAb;AACAO,MAAAA,aAAa,CAAC,OAAD,EAAU,MAAM,IAAIzE,SAAJ,CAAc,SAAd,EAAyBmE,GAAzB,EAA8BD,QAA9B,CAAhB,CAAb;;AACA,YAAMa,cAAc,GAAG,CAACC,SAAD,EAAYC,KAAZ,KAAsB,IAAInF,YAAJ,CAAiBmF,KAAjB,EAAwBd,GAAxB,EAA6BD,QAA7B,EAAwC,GAAEc,SAAU,IAAGC,KAAK,CAACP,IAAK,EAAlE,CAA7C;;AACA,YAAMQ,gBAAgB,GAAG,CAACC,MAAD,EAAST,IAAT,EAAeM,SAAf,KAA6B;AAClDG,QAAAA,MAAM,CAACP,gBAAP,CAAwBF,IAAxB,EAA+BO,KAAD,IAAW;AACrClD,UAAAA,WAAW,CAACqD,IAAZ,CAAiBL,cAAc,CAACC,SAAD,EAAYC,KAAZ,CAA/B;AACH,SAFD;AAGH,OAJD;;AAKA,UAAIT,qBAAJ,EAA2B;AACvB,SAAC7C,SAAD,EAAYC,QAAZ,EAAsBC,IAAtB,EAA4BsB,OAA5B,CAAqCuB,IAAD,IAAUQ,gBAAgB,CAACf,GAAG,CAACkB,MAAL,EAAaX,IAAb,EAAmBjD,MAAnB,CAA9D;AACH;;AACD,UAAI6C,kBAAJ,EAAwB;AACpB,SAAC3C,SAAD,EAAYC,QAAZ,EAAsBuB,OAAtB,CAA+BuB,IAAD,IAAUP,GAAG,CAACkB,MAAJ,CAAWT,gBAAX,CAA4BF,IAA5B,EAAmCY,CAAD,IAAO;AAAE,cAAItD,EAAJ;;AAAQ,iBAAO,CAACA,EAAE,GAAGsC,kBAAkB,KAAK,IAAvB,IAA+BA,kBAAkB,KAAK,KAAK,CAA3D,GAA+D,KAAK,CAApE,GAAwEA,kBAAkB,CAACc,IAAjG,MAA2G,IAA3G,IAAmHpD,EAAE,KAAK,KAAK,CAA/H,GAAmI,KAAK,CAAxI,GAA4IA,EAAE,CAAC8C,IAAH,CAAQR,kBAAR,EAA4BgB,CAA5B,CAAnJ;AAAoL,SAAvO,CAAxC;AACH;;AACD,UAAIf,uBAAJ,EAA6B;AACzB,SAAC5C,SAAD,EAAYC,QAAZ,EAAsBuB,OAAtB,CAA+BuB,IAAD,IAAUQ,gBAAgB,CAACf,GAAD,EAAMO,IAAN,EAAYhD,QAAZ,CAAxD;AACH;;AACD,YAAM6D,SAAS,GAAIC,MAAD,IAAY;AAC1B,cAAMC,GAAG,GAAG,gBAAgBD,MAAM,GAAG,MAAMA,MAAT,GAAkB,EAAxC,CAAZ;AACAzD,QAAAA,WAAW,CAAC8C,KAAZ,CAAkB,IAAI7E,SAAJ,CAAcyF,GAAd,EAAmBtB,GAAnB,EAAwBD,QAAxB,CAAlB;AACH,OAHD;;AAIAC,MAAAA,GAAG,CAACS,gBAAJ,CAAqB,OAArB,EAA+BU,CAAD,IAAO;AACjC,YAAItD,EAAJ;;AACA,SAACA,EAAE,GAAGsC,kBAAkB,KAAK,IAAvB,IAA+BA,kBAAkB,KAAK,KAAK,CAA3D,GAA+D,KAAK,CAApE,GAAwEA,kBAAkB,CAACO,KAAjG,MAA4G,IAA5G,IAAoH7C,EAAE,KAAK,KAAK,CAAhI,GAAoI,KAAK,CAAzI,GAA6IA,EAAE,CAAC8C,IAAH,CAAQR,kBAAR,EAA4BgB,CAA5B,CAA7I;AACAC,QAAAA,SAAS;AACZ,OAJD;AAKApB,MAAAA,GAAG,CAACS,gBAAJ,CAAqB/C,IAArB,EAA4BoD,KAAD,IAAW;AAClC,YAAIjD,EAAJ,EAAQC,EAAR;;AACA,cAAM;AAAEuD,UAAAA;AAAF,YAAarB,GAAnB;;AACA,YAAIqB,MAAM,GAAG,GAAb,EAAkB;AACd,WAACxD,EAAE,GAAGsC,kBAAkB,KAAK,IAAvB,IAA+BA,kBAAkB,KAAK,KAAK,CAA3D,GAA+D,KAAK,CAApE,GAAwEA,kBAAkB,CAACoB,QAAjG,MAA+G,IAA/G,IAAuH1D,EAAE,KAAK,KAAK,CAAnI,GAAuI,KAAK,CAA5I,GAAgJA,EAAE,CAAC8C,IAAH,CAAQR,kBAAR,CAAhJ;AACA,cAAIzD,QAAJ;;AACA,cAAI;AACAA,YAAAA,QAAQ,GAAGkE,cAAc,CAACrD,QAAD,EAAWuD,KAAX,CAAzB;AACH,WAFD,CAGA,OAAOU,GAAP,EAAY;AACR5D,YAAAA,WAAW,CAAC8C,KAAZ,CAAkBc,GAAlB;AACA;AACH;;AACD5D,UAAAA,WAAW,CAACqD,IAAZ,CAAiBvE,QAAjB;AACAkB,UAAAA,WAAW,CAAC2D,QAAZ;AACH,SAZD,MAaK;AACD,WAACzD,EAAE,GAAGqC,kBAAkB,KAAK,IAAvB,IAA+BA,kBAAkB,KAAK,KAAK,CAA3D,GAA+D,KAAK,CAApE,GAAwEA,kBAAkB,CAACO,KAAjG,MAA4G,IAA5G,IAAoH5C,EAAE,KAAK,KAAK,CAAhI,GAAoI,KAAK,CAAzI,GAA6IA,EAAE,CAAC6C,IAAH,CAAQR,kBAAR,EAA4BW,KAA5B,CAA7I;AACAM,UAAAA,SAAS,CAACC,MAAD,CAAT;AACH;AACJ,OApBD;AAqBH;AACD,UAAM;AAAEI,MAAAA,IAAF;AAAQvF,MAAAA,MAAR;AAAgB+B,MAAAA;AAAhB,QAA0B8B,QAAhC;;AACA,QAAI0B,IAAJ,EAAU;AACNzB,MAAAA,GAAG,CAAC0B,IAAJ,CAASxF,MAAT,EAAiBH,GAAjB,EAAsBkC,KAAtB,EAA6BwD,IAA7B,EAAmC1B,QAAQ,CAAC4B,QAA5C;AACH,KAFD,MAGK;AACD3B,MAAAA,GAAG,CAAC0B,IAAJ,CAASxF,MAAT,EAAiBH,GAAjB,EAAsBkC,KAAtB;AACH;;AACD,QAAIA,KAAJ,EAAW;AACP+B,MAAAA,GAAG,CAAC5B,OAAJ,GAAc2B,QAAQ,CAAC3B,OAAvB;AACA4B,MAAAA,GAAG,CAAC3B,YAAJ,GAAmB0B,QAAQ,CAAC1B,YAA5B;AACH;;AACD,QAAI,qBAAqB2B,GAAzB,EAA8B;AAC1BA,MAAAA,GAAG,CAAC7B,eAAJ,GAAsB4B,QAAQ,CAAC5B,eAA/B;AACH;;AACD,SAAK,MAAMe,GAAX,IAAkBlD,OAAlB,EAA2B;AACvB,UAAIA,OAAO,CAACoD,cAAR,CAAuBF,GAAvB,CAAJ,EAAiC;AAC7Bc,QAAAA,GAAG,CAAC4B,gBAAJ,CAAqB1C,GAArB,EAA0BlD,OAAO,CAACkD,GAAD,CAAjC;AACH;AACJ;;AACD,QAAI9C,IAAJ,EAAU;AACN4D,MAAAA,GAAG,CAAC6B,IAAJ,CAASzF,IAAT;AACH,KAFD,MAGK;AACD4D,MAAAA,GAAG,CAAC6B,IAAJ;AACH;;AACD,WAAO,MAAM;AACT,UAAI7B,GAAG,IAAIA,GAAG,CAAC8B,UAAJ,KAAmB,CAA9B,EAAiC;AAC7B9B,QAAAA,GAAG,CAAC+B,KAAJ;AACH;AACJ,KAJD;AAKH,GAzIM,CAAP;AA0IH;;AACD,SAASjC,uCAAT,CAAiD1D,IAAjD,EAAuDJ,OAAvD,EAAgE;AAC5D,MAAI6B,EAAJ;;AACA,MAAI,CAACzB,IAAD,IACA,OAAOA,IAAP,KAAgB,QADhB,IAEA4F,UAAU,CAAC5F,IAAD,CAFV,IAGA6F,iBAAiB,CAAC7F,IAAD,CAHjB,IAIA8F,aAAa,CAAC9F,IAAD,CAJb,IAKA+F,MAAM,CAAC/F,IAAD,CALN,IAMAgG,MAAM,CAAChG,IAAD,CANN,IAOAiG,gBAAgB,CAACjG,IAAD,CAPpB,EAO4B;AACxB,WAAOA,IAAP;AACH;;AACD,MAAIkG,iBAAiB,CAAClG,IAAD,CAArB,EAA6B;AACzB,WAAOA,IAAI,CAACmG,MAAZ;AACH;;AACD,MAAI,OAAOnG,IAAP,KAAgB,QAApB,EAA8B;AAC1BJ,IAAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,CAAC6B,EAAE,GAAG7B,OAAO,CAAC,cAAD,CAAb,MAAmC,IAAnC,IAA2C6B,EAAE,KAAK,KAAK,CAAvD,GAA2DA,EAA3D,GAAgE,gCAA1F;AACA,WAAO2E,IAAI,CAACC,SAAL,CAAerG,IAAf,CAAP;AACH;;AACD,QAAM,IAAIqC,SAAJ,CAAc,mBAAd,CAAN;AACH;;AACD,MAAMiE,SAAS,GAAG3E,MAAM,CAAC4E,SAAP,CAAiBC,QAAnC;;AACA,SAASC,aAAT,CAAuBC,GAAvB,EAA4BC,IAA5B,EAAkC;AAC9B,SAAOL,SAAS,CAAC/B,IAAV,CAAemC,GAAf,MAAyB,WAAUC,IAAK,GAA/C;AACH;;AACD,SAASb,aAAT,CAAuB9F,IAAvB,EAA6B;AACzB,SAAOyG,aAAa,CAACzG,IAAD,EAAO,aAAP,CAApB;AACH;;AACD,SAAS+F,MAAT,CAAgB/F,IAAhB,EAAsB;AAClB,SAAOyG,aAAa,CAACzG,IAAD,EAAO,MAAP,CAApB;AACH;;AACD,SAASgG,MAAT,CAAgBhG,IAAhB,EAAsB;AAClB,SAAOyG,aAAa,CAACzG,IAAD,EAAO,MAAP,CAApB;AACH;;AACD,SAASkG,iBAAT,CAA2BlG,IAA3B,EAAiC;AAC7B,SAAO,OAAO4G,WAAP,KAAuB,WAAvB,IAAsCA,WAAW,CAACC,MAAZ,CAAmB7G,IAAnB,CAA7C;AACH;;AACD,SAAS4F,UAAT,CAAoB5F,IAApB,EAA0B;AACtB,SAAO,OAAO8G,QAAP,KAAoB,WAApB,IAAmC9G,IAAI,YAAY8G,QAA1D;AACH;;AACD,SAASjB,iBAAT,CAA2B7F,IAA3B,EAAiC;AAC7B,SAAO,OAAO2C,eAAP,KAA2B,WAA3B,IAA0C3C,IAAI,YAAY2C,eAAjE;AACH;;AACD,SAASsD,gBAAT,CAA0BjG,IAA1B,EAAgC;AAC5B,SAAO,OAAO+G,cAAP,KAA0B,WAA1B,IAAyC/G,IAAI,YAAY+G,cAAhE;AACH","sourcesContent":["import { map } from '../operators/map';\nimport { Observable } from '../Observable';\nimport { AjaxResponse } from './AjaxResponse';\nimport { AjaxTimeoutError, AjaxError } from './errors';\nfunction ajaxGet(url, headers) {\n    return ajax({ method: 'GET', url, headers });\n}\nfunction ajaxPost(url, body, headers) {\n    return ajax({ method: 'POST', url, body, headers });\n}\nfunction ajaxDelete(url, headers) {\n    return ajax({ method: 'DELETE', url, headers });\n}\nfunction ajaxPut(url, body, headers) {\n    return ajax({ method: 'PUT', url, body, headers });\n}\nfunction ajaxPatch(url, body, headers) {\n    return ajax({ method: 'PATCH', url, body, headers });\n}\nconst mapResponse = map((x) => x.response);\nfunction ajaxGetJSON(url, headers) {\n    return mapResponse(ajax({\n        method: 'GET',\n        url,\n        headers,\n    }));\n}\nexport const ajax = (() => {\n    const create = (urlOrConfig) => {\n        const config = typeof urlOrConfig === 'string'\n            ? {\n                url: urlOrConfig,\n            }\n            : urlOrConfig;\n        return fromAjax(config);\n    };\n    create.get = ajaxGet;\n    create.post = ajaxPost;\n    create.delete = ajaxDelete;\n    create.put = ajaxPut;\n    create.patch = ajaxPatch;\n    create.getJSON = ajaxGetJSON;\n    return create;\n})();\nconst UPLOAD = 'upload';\nconst DOWNLOAD = 'download';\nconst LOADSTART = 'loadstart';\nconst PROGRESS = 'progress';\nconst LOAD = 'load';\nexport function fromAjax(init) {\n    return new Observable((destination) => {\n        var _a, _b;\n        const config = Object.assign({ async: true, crossDomain: false, withCredentials: false, method: 'GET', timeout: 0, responseType: 'json' }, init);\n        const { queryParams, body: configuredBody, headers: configuredHeaders } = config;\n        let url = config.url;\n        if (!url) {\n            throw new TypeError('url is required');\n        }\n        if (queryParams) {\n            let searchParams;\n            if (url.includes('?')) {\n                const parts = url.split('?');\n                if (2 < parts.length) {\n                    throw new TypeError('invalid url');\n                }\n                searchParams = new URLSearchParams(parts[1]);\n                new URLSearchParams(queryParams).forEach((value, key) => searchParams.set(key, value));\n                url = parts[0] + '?' + searchParams;\n            }\n            else {\n                searchParams = new URLSearchParams(queryParams);\n                url = url + '?' + searchParams;\n            }\n        }\n        const headers = {};\n        if (configuredHeaders) {\n            for (const key in configuredHeaders) {\n                if (configuredHeaders.hasOwnProperty(key)) {\n                    headers[key.toLowerCase()] = configuredHeaders[key];\n                }\n            }\n        }\n        const crossDomain = config.crossDomain;\n        if (!crossDomain && !('x-requested-with' in headers)) {\n            headers['x-requested-with'] = 'XMLHttpRequest';\n        }\n        const { withCredentials, xsrfCookieName, xsrfHeaderName } = config;\n        if ((withCredentials || !crossDomain) && xsrfCookieName && xsrfHeaderName) {\n            const xsrfCookie = (_b = (_a = document === null || document === void 0 ? void 0 : document.cookie.match(new RegExp(`(^|;\\\\s*)(${xsrfCookieName})=([^;]*)`))) === null || _a === void 0 ? void 0 : _a.pop()) !== null && _b !== void 0 ? _b : '';\n            if (xsrfCookie) {\n                headers[xsrfHeaderName] = xsrfCookie;\n            }\n        }\n        const body = extractContentTypeAndMaybeSerializeBody(configuredBody, headers);\n        const _request = Object.assign(Object.assign({}, config), { url,\n            headers,\n            body });\n        let xhr;\n        xhr = init.createXHR ? init.createXHR() : new XMLHttpRequest();\n        {\n            const { progressSubscriber, includeDownloadProgress = false, includeUploadProgress = false } = init;\n            const addErrorEvent = (type, errorFactory) => {\n                xhr.addEventListener(type, () => {\n                    var _a;\n                    const error = errorFactory();\n                    (_a = progressSubscriber === null || progressSubscriber === void 0 ? void 0 : progressSubscriber.error) === null || _a === void 0 ? void 0 : _a.call(progressSubscriber, error);\n                    destination.error(error);\n                });\n            };\n            addErrorEvent('timeout', () => new AjaxTimeoutError(xhr, _request));\n            addErrorEvent('abort', () => new AjaxError('aborted', xhr, _request));\n            const createResponse = (direction, event) => new AjaxResponse(event, xhr, _request, `${direction}_${event.type}`);\n            const addProgressEvent = (target, type, direction) => {\n                target.addEventListener(type, (event) => {\n                    destination.next(createResponse(direction, event));\n                });\n            };\n            if (includeUploadProgress) {\n                [LOADSTART, PROGRESS, LOAD].forEach((type) => addProgressEvent(xhr.upload, type, UPLOAD));\n            }\n            if (progressSubscriber) {\n                [LOADSTART, PROGRESS].forEach((type) => xhr.upload.addEventListener(type, (e) => { var _a; return (_a = progressSubscriber === null || progressSubscriber === void 0 ? void 0 : progressSubscriber.next) === null || _a === void 0 ? void 0 : _a.call(progressSubscriber, e); }));\n            }\n            if (includeDownloadProgress) {\n                [LOADSTART, PROGRESS].forEach((type) => addProgressEvent(xhr, type, DOWNLOAD));\n            }\n            const emitError = (status) => {\n                const msg = 'ajax error' + (status ? ' ' + status : '');\n                destination.error(new AjaxError(msg, xhr, _request));\n            };\n            xhr.addEventListener('error', (e) => {\n                var _a;\n                (_a = progressSubscriber === null || progressSubscriber === void 0 ? void 0 : progressSubscriber.error) === null || _a === void 0 ? void 0 : _a.call(progressSubscriber, e);\n                emitError();\n            });\n            xhr.addEventListener(LOAD, (event) => {\n                var _a, _b;\n                const { status } = xhr;\n                if (status < 400) {\n                    (_a = progressSubscriber === null || progressSubscriber === void 0 ? void 0 : progressSubscriber.complete) === null || _a === void 0 ? void 0 : _a.call(progressSubscriber);\n                    let response;\n                    try {\n                        response = createResponse(DOWNLOAD, event);\n                    }\n                    catch (err) {\n                        destination.error(err);\n                        return;\n                    }\n                    destination.next(response);\n                    destination.complete();\n                }\n                else {\n                    (_b = progressSubscriber === null || progressSubscriber === void 0 ? void 0 : progressSubscriber.error) === null || _b === void 0 ? void 0 : _b.call(progressSubscriber, event);\n                    emitError(status);\n                }\n            });\n        }\n        const { user, method, async } = _request;\n        if (user) {\n            xhr.open(method, url, async, user, _request.password);\n        }\n        else {\n            xhr.open(method, url, async);\n        }\n        if (async) {\n            xhr.timeout = _request.timeout;\n            xhr.responseType = _request.responseType;\n        }\n        if ('withCredentials' in xhr) {\n            xhr.withCredentials = _request.withCredentials;\n        }\n        for (const key in headers) {\n            if (headers.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, headers[key]);\n            }\n        }\n        if (body) {\n            xhr.send(body);\n        }\n        else {\n            xhr.send();\n        }\n        return () => {\n            if (xhr && xhr.readyState !== 4) {\n                xhr.abort();\n            }\n        };\n    });\n}\nfunction extractContentTypeAndMaybeSerializeBody(body, headers) {\n    var _a;\n    if (!body ||\n        typeof body === 'string' ||\n        isFormData(body) ||\n        isURLSearchParams(body) ||\n        isArrayBuffer(body) ||\n        isFile(body) ||\n        isBlob(body) ||\n        isReadableStream(body)) {\n        return body;\n    }\n    if (isArrayBufferView(body)) {\n        return body.buffer;\n    }\n    if (typeof body === 'object') {\n        headers['content-type'] = (_a = headers['content-type']) !== null && _a !== void 0 ? _a : 'application/json;charset=utf-8';\n        return JSON.stringify(body);\n    }\n    throw new TypeError('Unknown body type');\n}\nconst _toString = Object.prototype.toString;\nfunction toStringCheck(obj, name) {\n    return _toString.call(obj) === `[object ${name}]`;\n}\nfunction isArrayBuffer(body) {\n    return toStringCheck(body, 'ArrayBuffer');\n}\nfunction isFile(body) {\n    return toStringCheck(body, 'File');\n}\nfunction isBlob(body) {\n    return toStringCheck(body, 'Blob');\n}\nfunction isArrayBufferView(body) {\n    return typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView(body);\n}\nfunction isFormData(body) {\n    return typeof FormData !== 'undefined' && body instanceof FormData;\n}\nfunction isURLSearchParams(body) {\n    return typeof URLSearchParams !== 'undefined' && body instanceof URLSearchParams;\n}\nfunction isReadableStream(body) {\n    return typeof ReadableStream !== 'undefined' && body instanceof ReadableStream;\n}\n"]},"metadata":{},"sourceType":"module"}